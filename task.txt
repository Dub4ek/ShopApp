Создайте/модифицируйте сервис CartService (cart/services/cart.service.ts), который должен содержать данные корзины интернет магазина и управлять содержимым.
Сервис должен хранить информацию:
cartProducts - о добавленных товарах в корзину
totalQuantity - общее количество товаров в корзине
totalSum - общую сумму товаров в корзине
Сервис должен предоставлять следующий функционал:
addProduct() - добавить в корзину товар с количеством
removeProduct() - удалить указанный товар из корзины
increaseQuantity()/decreaseQuantity() - увеличить/уменьшить количество для указаного товара
removeAllProducts() - очистить корзину
updateCartData() - пересчитать общее количество товара и сумму после каждой операции, которая влияет на корзину

Создайте сервис LocalStorageService (core/services/local-storage.service.ts), который позволит работать
с window.localStorage (как класс, useClass).
Он должен предоставлять методы для:

установки значения: строки или объекта (setItem)
получения значения: строки или объекта (getItem)
удаления значения по ключу (removeItem)
Создайте сервис ConfigOptionsService (core/services/config-options.service.ts), который должен хранить объект настроек (id, login, email, ...).
Сервис должен предоставлять методы для установки и извлечения данных. Метод установки на вход принимает объект,
а метод извлечения данных возвращает объект. Предусмотреть возможность установки подмножества свойств.
Например, { id, login }

Создайте сервис ConstantsService (core/services/constant.service.ts), в виде готового литерала объекта,
например { App: "TaskManager", Ver: "1.0" }. Зарегистрируйте его, используя useValue.

Создайте сервис GeneratorService (core/services/generator.ts), который должен генерировать случайную последовательность символов длины n
из набора a-z, A-Z, 0-9. Создайте функцию GeneratorFactory(n: number), которая будет предоставлять сгенеренную строку, используя GeneratorService
Зарегистрируйте GeneratorFactory используя useFactory.

Создайте демо-компонент AboutComponent (layout/components/about.component.ts) и внедрите перечисленные выше сервисы.
Используйте декоратор @optional().

Напишите директиву shared/directives/, которая добавляет обработчик события click к хост элементу.
Клик изменяет размер шрифта элемента, рамку или что-то другое на Ваше усмотрение.
Добавьте @input() для директивы. Используйте ElementRef + Renderer2
